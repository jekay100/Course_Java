继承：用来表达类型概念上具体化。概念的yanxu 
属性可以被继承，构造器不能继承
人派生出学生，学生继承出人
了类是父类型的具体化
父类型是子类型的抽象化
继承的特点
１子类继承父类的属性和方法（昆虫和蟑螂）　
　构造器不能继承（父类和子类的创建过程是不一样的）
方法的重写（就是现实生活中的变异了）
创建子类实例会递归创建父类的所在空间
子类默认调用父类无参构造器
Java是单继承
继承的关键字是extends
Persion p = new Student();//相当于自动转化
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
Java规定全写无参构造器，也不一定，但大部分

１　分配空间时先进行类的加载没有加载先加载如果有父类就加载父类没有的话就加载，把那个class文件加载到内存里去相当于形成个对象，如果在内存里面没有就会去classPath里面找
　　如果没有找见就会报错
　　按需加载（蓝堕）
　　加载以后是一个对象，对象的类型是class
２　分配空间
３　赋值
４　
类的类＝＝自我管理自我的问题
super必须写在第一行
没有父类也继承于object类，所有的类全有父类
object先运行


new GOo时先分配Foo然后Goo,整体就个Goo,然后赋值，最后把值叫成

所有类全写上无参构造器

图形是多态
继承可以写成是，扩展是

重载的构造器之间能重用
父类型可以引用子类型的实例，父类型 的实例是多态的！
子类可以覆盖父类的方法 ，修改父类的行为
方法覆盖：子类覆盖了父类相同方法签名的方法
方法签名 = 方法名+参数类型列表
继承是动态绑定的
Java按属性分配
属性是静态绑定
方法是动态绑定，软件运行期次定调用哪个方法，方法的覆盖




